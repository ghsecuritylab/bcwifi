#ifndef __COMMON_H
#define __COMMON_H
#include <linux/types.h>

#define MAX_URL 256 
enum 
{
	CMD_NONE,
	CMD_ADDUSER,
	CMD_DELUSER,
	CMD_SETWHURL,
	CMD_SETWHIP,
	CMD_SETAUTHURL,
	CMD_SETENABLE,
	CMD_SETTIMEOUT,
	CMD_SETKICKOUT,
	CMD_GETHOSTNUM,
	CMD_GETACCTIME,
	CMD_SETACCTIME,
	CMD_SETINJECT,
	CMD_SETPUSHTME,
	CMD_SETPUSHURL,
	CMD_SETNAVIURL,
	CMD_SETNAVIURLS,
	CMD_UNKNOWN
};

enum {
	NORMAL_USER = 0,	
	OTHERS_USER = 1	
};

struct user_node
{
	uint8_t type;  
	__be32 saddr;
	unsigned long first_used;
	unsigned long last_used;
	unsigned long timeout;

	struct user_node *next;
};

struct url_node
{
	char url[MAX_URL];
	int size;

	struct url_node *next;
};

struct hijack_node
{
	char hijack[MAX_URL],target[MAX_URL];
	int size;

	struct hijack_node *next;
};

struct ip_node
{
	__be32 saddr;
	void *data; 

	struct ip_node *next;
};


#endif
