# Makefile.in generated by automake 1.11.6 from Makefile.am.
# test/default/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/libsodium
pkgincludedir = $(includedir)/libsodium
pkglibdir = $(libdir)/libsodium
pkglibexecdir = $(libexecdir)/libsodium
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = mipsel-unknown-linux-gnu
check_PROGRAMS = $(am__EXEEXT_1)
TESTS = $(am__EXEEXT_1)
subdir = test/default
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = auth$(EXEEXT) auth2$(EXEEXT) auth3$(EXEEXT) \
	auth5$(EXEEXT) box$(EXEEXT) box2$(EXEEXT) box7$(EXEEXT) \
	box8$(EXEEXT) core1$(EXEEXT) core2$(EXEEXT) core3$(EXEEXT) \
	core4$(EXEEXT) core5$(EXEEXT) core6$(EXEEXT) \
	generichash$(EXEEXT) generichash2$(EXEEXT) hash$(EXEEXT) \
	hash3$(EXEEXT) onetimeauth$(EXEEXT) onetimeauth2$(EXEEXT) \
	onetimeauth7$(EXEEXT) randombytes$(EXEEXT) scalarmult$(EXEEXT) \
	scalarmult2$(EXEEXT) scalarmult5$(EXEEXT) scalarmult6$(EXEEXT) \
	secretbox$(EXEEXT) secretbox2$(EXEEXT) secretbox7$(EXEEXT) \
	secretbox8$(EXEEXT) shorthash$(EXEEXT) sodium_core$(EXEEXT) \
	sodium_utils$(EXEEXT) sodium_version$(EXEEXT) stream$(EXEEXT) \
	stream2$(EXEEXT) stream3$(EXEEXT) stream4$(EXEEXT) \
	stream5$(EXEEXT) stream6$(EXEEXT)
auth_SOURCES = auth.c
auth_OBJECTS = auth.$(OBJEXT)
auth_DEPENDENCIES = $(TESTS_LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
auth2_SOURCES = auth2.c
auth2_OBJECTS = auth2.$(OBJEXT)
auth2_DEPENDENCIES = $(TESTS_LDADD)
auth3_SOURCES = auth3.c
auth3_OBJECTS = auth3.$(OBJEXT)
auth3_DEPENDENCIES = $(TESTS_LDADD)
auth5_SOURCES = auth5.c
auth5_OBJECTS = auth5.$(OBJEXT)
auth5_DEPENDENCIES = $(TESTS_LDADD)
box_SOURCES = box.c
box_OBJECTS = box.$(OBJEXT)
box_DEPENDENCIES = $(TESTS_LDADD)
box2_SOURCES = box2.c
box2_OBJECTS = box2.$(OBJEXT)
box2_DEPENDENCIES = $(TESTS_LDADD)
box7_SOURCES = box7.c
box7_OBJECTS = box7.$(OBJEXT)
box7_DEPENDENCIES = $(TESTS_LDADD)
box8_SOURCES = box8.c
box8_OBJECTS = box8.$(OBJEXT)
box8_DEPENDENCIES = $(TESTS_LDADD)
core1_SOURCES = core1.c
core1_OBJECTS = core1.$(OBJEXT)
core1_DEPENDENCIES = $(TESTS_LDADD)
core2_SOURCES = core2.c
core2_OBJECTS = core2.$(OBJEXT)
core2_DEPENDENCIES = $(TESTS_LDADD)
core3_SOURCES = core3.c
core3_OBJECTS = core3.$(OBJEXT)
core3_DEPENDENCIES = $(TESTS_LDADD)
core4_SOURCES = core4.c
core4_OBJECTS = core4.$(OBJEXT)
core4_DEPENDENCIES = $(TESTS_LDADD)
core5_SOURCES = core5.c
core5_OBJECTS = core5.$(OBJEXT)
core5_DEPENDENCIES = $(TESTS_LDADD)
core6_SOURCES = core6.c
core6_OBJECTS = core6.$(OBJEXT)
core6_DEPENDENCIES = $(TESTS_LDADD)
generichash_SOURCES = generichash.c
generichash_OBJECTS = generichash.$(OBJEXT)
generichash_DEPENDENCIES = $(TESTS_LDADD)
generichash2_SOURCES = generichash2.c
generichash2_OBJECTS = generichash2.$(OBJEXT)
generichash2_DEPENDENCIES = $(TESTS_LDADD)
hash_SOURCES = hash.c
hash_OBJECTS = hash.$(OBJEXT)
hash_DEPENDENCIES = $(TESTS_LDADD)
hash3_SOURCES = hash3.c
hash3_OBJECTS = hash3.$(OBJEXT)
hash3_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth_SOURCES = onetimeauth.c
onetimeauth_OBJECTS = onetimeauth.$(OBJEXT)
onetimeauth_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth2_SOURCES = onetimeauth2.c
onetimeauth2_OBJECTS = onetimeauth2.$(OBJEXT)
onetimeauth2_DEPENDENCIES = $(TESTS_LDADD)
onetimeauth7_SOURCES = onetimeauth7.c
onetimeauth7_OBJECTS = onetimeauth7.$(OBJEXT)
onetimeauth7_DEPENDENCIES = $(TESTS_LDADD)
randombytes_SOURCES = randombytes.c
randombytes_OBJECTS = randombytes.$(OBJEXT)
randombytes_DEPENDENCIES = $(TESTS_LDADD)
scalarmult_SOURCES = scalarmult.c
scalarmult_OBJECTS = scalarmult.$(OBJEXT)
scalarmult_DEPENDENCIES = $(TESTS_LDADD)
scalarmult2_SOURCES = scalarmult2.c
scalarmult2_OBJECTS = scalarmult2.$(OBJEXT)
scalarmult2_DEPENDENCIES = $(TESTS_LDADD)
scalarmult5_SOURCES = scalarmult5.c
scalarmult5_OBJECTS = scalarmult5.$(OBJEXT)
scalarmult5_DEPENDENCIES = $(TESTS_LDADD)
scalarmult6_SOURCES = scalarmult6.c
scalarmult6_OBJECTS = scalarmult6.$(OBJEXT)
scalarmult6_DEPENDENCIES = $(TESTS_LDADD)
secretbox_SOURCES = secretbox.c
secretbox_OBJECTS = secretbox.$(OBJEXT)
secretbox_DEPENDENCIES = $(TESTS_LDADD)
secretbox2_SOURCES = secretbox2.c
secretbox2_OBJECTS = secretbox2.$(OBJEXT)
secretbox2_DEPENDENCIES = $(TESTS_LDADD)
secretbox7_SOURCES = secretbox7.c
secretbox7_OBJECTS = secretbox7.$(OBJEXT)
secretbox7_DEPENDENCIES = $(TESTS_LDADD)
secretbox8_SOURCES = secretbox8.c
secretbox8_OBJECTS = secretbox8.$(OBJEXT)
secretbox8_DEPENDENCIES = $(TESTS_LDADD)
shorthash_SOURCES = shorthash.c
shorthash_OBJECTS = shorthash.$(OBJEXT)
shorthash_DEPENDENCIES = $(TESTS_LDADD)
sodium_core_SOURCES = sodium_core.c
sodium_core_OBJECTS = sodium_core.$(OBJEXT)
sodium_core_DEPENDENCIES = $(TESTS_LDADD)
sodium_utils_SOURCES = sodium_utils.c
sodium_utils_OBJECTS = sodium_utils.$(OBJEXT)
sodium_utils_DEPENDENCIES = $(TESTS_LDADD)
sodium_version_SOURCES = sodium_version.c
sodium_version_OBJECTS = sodium_version.$(OBJEXT)
sodium_version_DEPENDENCIES = $(TESTS_LDADD)
stream_SOURCES = stream.c
stream_OBJECTS = stream.$(OBJEXT)
stream_DEPENDENCIES = $(TESTS_LDADD)
stream2_SOURCES = stream2.c
stream2_OBJECTS = stream2.$(OBJEXT)
stream2_DEPENDENCIES = $(TESTS_LDADD)
stream3_SOURCES = stream3.c
stream3_OBJECTS = stream3.$(OBJEXT)
stream3_DEPENDENCIES = $(TESTS_LDADD)
stream4_SOURCES = stream4.c
stream4_OBJECTS = stream4.$(OBJEXT)
stream4_DEPENDENCIES = $(TESTS_LDADD)
stream5_SOURCES = stream5.c
stream5_OBJECTS = stream5.$(OBJEXT)
stream5_DEPENDENCIES = $(TESTS_LDADD)
stream6_SOURCES = stream6.c
stream6_OBJECTS = stream6.$(OBJEXT)
stream6_DEPENDENCIES = $(TESTS_LDADD)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = auth.c auth2.c auth3.c auth5.c box.c box2.c box7.c box8.c \
	core1.c core2.c core3.c core4.c core5.c core6.c generichash.c \
	generichash2.c hash.c hash3.c onetimeauth.c onetimeauth2.c \
	onetimeauth7.c randombytes.c scalarmult.c scalarmult2.c \
	scalarmult5.c scalarmult6.c secretbox.c secretbox2.c \
	secretbox7.c secretbox8.c shorthash.c sodium_core.c \
	sodium_utils.c sodium_version.c stream.c stream2.c stream3.c \
	stream4.c stream5.c stream6.c
DIST_SOURCES = auth.c auth2.c auth3.c auth5.c box.c box2.c box7.c \
	box8.c core1.c core2.c core3.c core4.c core5.c core6.c \
	generichash.c generichash2.c hash.c hash3.c onetimeauth.c \
	onetimeauth2.c onetimeauth7.c randombytes.c scalarmult.c \
	scalarmult2.c scalarmult5.c scalarmult6.c secretbox.c \
	secretbox2.c secretbox7.c secretbox8.c shorthash.c \
	sodium_core.c sodium_utils.c sodium_version.c stream.c \
	stream2.c stream3.c stream4.c stream5.c stream6.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = mipsel-uclibc-ar
AS = mipsel-uclibc-as
AUTOCONF = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/missing --run autoconf
AUTOHEADER = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/missing --run automake-1.11
AWK = mawk
CC = mipsel-uclibc-gcc -std=gnu99
CCAS = mipsel-uclibc-gcc -std=gnu99
CCASDEPMODE = depmode=none
CCASFLAGS =  -g -O2 -fPIC -fPIE -fwrapv -fno-strict-aliasing -fno-strict-overflow -Winit-self -Wwrite-strings -Wdiv-by-zero
CCDEPMODE = depmode=none
CFLAGS =  -g -O2 -fPIC -fPIE -fwrapv -fno-strict-aliasing -fno-strict-overflow -Winit-self -Wwrite-strings -Wdiv-by-zero -fvisibility=hidden -fPIC -fPIE -fwrapv -fno-strict-aliasing -fno-strict-overflow -Winit-self -Wwrite-strings -Wdiv-by-zero
CPP = mipsel-uclibc-gcc -std=gnu99 -E
CPPFLAGS =  -D_FORTIFY_SOURCE=2 -I/usr/local/include -D_FORTIFY_SOURCE=2 -I/usr/local/include
CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wchar-subscripts -Wcomment -Wfloat-equal -Wformat=2 -Wimplicit -Wmissing-declarations -Wmissing-prototypes -Wnormalized=id -Woverride-init -Wparentheses -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libsodium\" -DPACKAGE_TARNAME=\"libsodium\" -DPACKAGE_VERSION=\"0.4.1\" -DPACKAGE_STRING=\"libsodium\ 0.4.1\" -DPACKAGE_BUGREPORT=\"https://github.com/jedisct1/libsodium/issues\" -DPACKAGE_URL=\"https://github.com/jedisct1/libsodium\" -DPACKAGE=\"libsodium\" -DVERSION=\"0.4.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DNATIVE_LITTLE_ENDIAN=1
DEPDIR = .deps
DLLTOOL = false
DLL_VERSION = 4
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_AMD64_ASM_V = 0
HAVE_CPUID_V = 0
HAVE_TI_MODE_V = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ISODATE = 2014-07-30
LD = mipsel-uclibc-ld
LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -L/usr/local/lib -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -L/usr/local/lib
LIBOBJS = 
LIBS = -ldl -ldl -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIBTOOL_EXTRA_FLAGS = -version-info 5:0:1
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = mipsel-uclibc-nm
NMEDIT = 
OBJDUMP = mipsel-linux-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libsodium
PACKAGE_BUGREPORT = https://github.com/jedisct1/libsodium/issues
PACKAGE_NAME = libsodium
PACKAGE_STRING = libsodium 0.4.1
PACKAGE_TARNAME = libsodium
PACKAGE_URL = https://github.com/jedisct1/libsodium
PACKAGE_VERSION = 0.4.1
PATH_SEPARATOR = :
RANLIB = mipsel-uclibc-ranlib
SAFECODE_HOME = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SODIUM_LIBRARY_VERSION = 5:0:1
SODIUM_LIBRARY_VERSION_MAJOR = 4
SODIUM_LIBRARY_VERSION_MINOR = 1
STRIP = mipsel-uclibc-strip
VERSION = 0.4.1
abs_builddir = /home/rainkid/workspace/bcwifi/release/src/router/libsodium/test/default
abs_srcdir = /home/rainkid/workspace/bcwifi/release/src/router/libsodium/test/default
abs_top_builddir = /home/rainkid/workspace/bcwifi/release/src/router/libsodium
abs_top_srcdir = /home/rainkid/workspace/bcwifi/release/src/router/libsodium
ac_ct_AR = 
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = mipsel-unknown-linux-gnu
host_alias = mipsel-linux
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/rainkid/workspace/bcwifi/release/src/router/libsodium/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
EXTRA_DIST = \
	cmptest.h \
	auth.exp \
	auth2.exp \
	auth3.exp \
	auth5.exp \
	box.exp \
	box2.exp \
	box7.exp \
	box8.exp \
	core1.exp \
	core2.exp \
	core3.exp \
	core4.exp \
	core5.exp \
	core6.exp \
	generichash.exp \
	generichash2.exp \
	hash.exp \
	hash2.exp \
	hash3.exp \
	onetimeauth.exp \
	onetimeauth2.exp \
	onetimeauth7.exp \
	scalarmult.exp \
	scalarmult2.exp \
	scalarmult5.exp \
	scalarmult6.exp \
	secretbox.exp \
	secretbox2.exp \
	secretbox7.exp \
	secretbox8.exp \
	shorthash.exp \
	sodium_core.exp \
	sodium_utils.exp \
	sodium_version.exp \
	stream.exp \
	stream2.exp \
	stream3.exp \
	stream4.exp \
	stream5.exp \
	stream6.exp

DISTCLEANFILES = \
	auth.res \
	auth2.res \
	auth3.res \
	auth5.res \
	box.res \
	box2.res \
	box7.res \
	box8.res \
	core1.res \
	core2.res \
	core3.res \
	core4.res \
	core5.res \
	core6.res \
	generichash.res \
	generichash2.res \
	hash.res \
	hash2.res \
	hash3.res \
	onetimeauth.res \
	onetimeauth2.res \
	onetimeauth7.res \
	scalarmult.res \
	scalarmult2.res \
	scalarmult5.res \
	scalarmult6.res \
	secretbox.res \
	secretbox2.res \
	secretbox7.res \
	secretbox8.res \
	shorthash.res \
	sodium_core.res \
	sodium_utils.res \
	sodium_version.res \
	stream.res \
	stream2.res \
	stream3.res \
	stream4.res \
	stream5.res \
	stream6.res

AM_CPPFLAGS = \
	-DTEST_SRCDIR=\".\" \
	-I$(top_srcdir)/src/libsodium/include \
	-I$(top_srcdir)/src/libsodium/include/sodium \
	-I$(top_builddir)/src/libsodium/include \
	-I$(top_builddir)/src/libsodium/include/sodium \
	-I$(top_srcdir)/test/quirks

TESTS_TARGETS = \
	auth \
	auth2 \
	auth3 \
	auth5 \
	box \
	box2 \
	box7 \
	box8 \
	core1 \
	core2 \
	core3 \
	core4 \
	core5 \
	core6 \
	generichash \
	generichash2 \
	hash \
	hash3 \
	onetimeauth \
	onetimeauth2 \
	onetimeauth7 \
	randombytes \
	scalarmult \
	scalarmult2 \
	scalarmult5 \
	scalarmult6 \
	secretbox \
	secretbox2 \
	secretbox7 \
	secretbox8 \
	shorthash \
	sodium_core \
	sodium_utils \
	sodium_version \
	stream \
	stream2 \
	stream3 \
	stream4 \
	stream5 \
	stream6

TESTS_LDADD = \
	${top_builddir}/src/libsodium/libsodium.la

auth_SOURCE = cmptest.h auth.c
auth_LDADD = $(TESTS_LDADD)
auth2_SOURCE = cmptest.h auth2.c
auth2_LDADD = $(TESTS_LDADD)
auth3_SOURCE = cmptest.h auth3.c
auth3_LDADD = $(TESTS_LDADD)
auth5_SOURCE = cmptest.h auth5.c windows/windows-quirks.h
auth5_LDADD = $(TESTS_LDADD)
box_SOURCE = cmptest.h box.c
box_LDADD = $(TESTS_LDADD)
box2_SOURCE = cmptest.h box2.c
box2_LDADD = $(TESTS_LDADD)
box7_SOURCE = cmptest.h box7.c
box7_LDADD = $(TESTS_LDADD)
box8_SOURCE = cmptest.h box8.c
box8_LDADD = $(TESTS_LDADD)
core1_SOURCE = cmptest.h core1.c
core1_LDADD = $(TESTS_LDADD)
core2_SOURCE = cmptest.h core2.c
core2_LDADD = $(TESTS_LDADD)
core3_SOURCE = cmptest.h core3.c
core3_LDADD = $(TESTS_LDADD)
core4_SOURCE = cmptest.h core4.c
core4_LDADD = $(TESTS_LDADD)
core5_SOURCE = cmptest.h core5.c
core5_LDADD = $(TESTS_LDADD)
core6_SOURCE = cmptest.h core6.c
core6_LDADD = $(TESTS_LDADD)
generichash_SOURCE = cmptest.h generichash.c
generichash_LDADD = $(TESTS_LDADD)
generichash2_SOURCE = cmptest.h generichash2.c
generichash2_LDADD = $(TESTS_LDADD)
hash_SOURCE = cmptest.h hash.c
hash_LDADD = $(TESTS_LDADD)
hash3_SOURCE = cmptest.h hash3.c
hash3_LDADD = $(TESTS_LDADD)
onetimeauth_SOURCE = cmptest.h onetimeauth.c
onetimeauth_LDADD = $(TESTS_LDADD)
onetimeauth2_SOURCE = cmptest.h onetimeauth2.c
onetimeauth2_LDADD = $(TESTS_LDADD)
onetimeauth7_SOURCE = cmptest.h onetimeauth7.c
onetimeauth7_LDADD = $(TESTS_LDADD)
randombytes_SOURCE = randombytes.c
randombytes_LDADD = $(TESTS_LDADD)
scalarmult_SOURCE = cmptest.h scalarmult.c
scalarmult_LDADD = $(TESTS_LDADD)
scalarmult2_SOURCE = cmptest.h scalarmult2.c
scalarmult2_LDADD = $(TESTS_LDADD)
scalarmult5_SOURCE = cmptest.h scalarmult5.c
scalarmult5_LDADD = $(TESTS_LDADD)
scalarmult6_SOURCE = cmptest.h scalarmult6.c
scalarmult6_LDADD = $(TESTS_LDADD)
secretbox_SOURCE = cmptest.h secretbox.c
secretbox_LDADD = $(TESTS_LDADD)
secretbox2_SOURCE = cmptest.h secretbox2.c
secretbox2_LDADD = $(TESTS_LDADD)
secretbox7_SOURCE = cmptest.h secretbox7.c
secretbox7_LDADD = $(TESTS_LDADD)
secretbox8_SOURCE = cmptest.h secretbox8.c
secretbox8_LDADD = $(TESTS_LDADD)
shorthash_SOURCE = cmptest.h shorthash.c
shorthash_LDADD = $(TESTS_LDADD)
sodium_core_SOURCE = cmptest.h sodium_core.c
sodium_core_LDADD = $(TESTS_LDADD)
sodium_utils_SOURCE = cmptest.h sodium_utils.c
sodium_utils_LDADD = $(TESTS_LDADD)
sodium_version_SOURCE = cmptest.h sodium_version.c
sodium_version_LDADD = $(TESTS_LDADD)
stream_SOURCE = cmptest.h stream.c
stream_LDADD = $(TESTS_LDADD)
stream2_SOURCE = cmptest.h stream2.c
stream2_LDADD = $(TESTS_LDADD)
stream3_SOURCE = cmptest.h stream3.c
stream3_LDADD = $(TESTS_LDADD)
stream4_SOURCE = cmptest.h stream4.c
stream4_LDADD = $(TESTS_LDADD)
stream5_SOURCE = cmptest.h stream5.c
stream5_LDADD = $(TESTS_LDADD)
stream6_SOURCE = cmptest.h stream6.c
stream6_LDADD = $(TESTS_LDADD)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/default/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/default/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
auth$(EXEEXT): $(auth_OBJECTS) $(auth_DEPENDENCIES) $(EXTRA_auth_DEPENDENCIES) 
	@rm -f auth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth_OBJECTS) $(auth_LDADD) $(LIBS)
auth2$(EXEEXT): $(auth2_OBJECTS) $(auth2_DEPENDENCIES) $(EXTRA_auth2_DEPENDENCIES) 
	@rm -f auth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth2_OBJECTS) $(auth2_LDADD) $(LIBS)
auth3$(EXEEXT): $(auth3_OBJECTS) $(auth3_DEPENDENCIES) $(EXTRA_auth3_DEPENDENCIES) 
	@rm -f auth3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth3_OBJECTS) $(auth3_LDADD) $(LIBS)
auth5$(EXEEXT): $(auth5_OBJECTS) $(auth5_DEPENDENCIES) $(EXTRA_auth5_DEPENDENCIES) 
	@rm -f auth5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(auth5_OBJECTS) $(auth5_LDADD) $(LIBS)
box$(EXEEXT): $(box_OBJECTS) $(box_DEPENDENCIES) $(EXTRA_box_DEPENDENCIES) 
	@rm -f box$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box_OBJECTS) $(box_LDADD) $(LIBS)
box2$(EXEEXT): $(box2_OBJECTS) $(box2_DEPENDENCIES) $(EXTRA_box2_DEPENDENCIES) 
	@rm -f box2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box2_OBJECTS) $(box2_LDADD) $(LIBS)
box7$(EXEEXT): $(box7_OBJECTS) $(box7_DEPENDENCIES) $(EXTRA_box7_DEPENDENCIES) 
	@rm -f box7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box7_OBJECTS) $(box7_LDADD) $(LIBS)
box8$(EXEEXT): $(box8_OBJECTS) $(box8_DEPENDENCIES) $(EXTRA_box8_DEPENDENCIES) 
	@rm -f box8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(box8_OBJECTS) $(box8_LDADD) $(LIBS)
core1$(EXEEXT): $(core1_OBJECTS) $(core1_DEPENDENCIES) $(EXTRA_core1_DEPENDENCIES) 
	@rm -f core1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core1_OBJECTS) $(core1_LDADD) $(LIBS)
core2$(EXEEXT): $(core2_OBJECTS) $(core2_DEPENDENCIES) $(EXTRA_core2_DEPENDENCIES) 
	@rm -f core2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core2_OBJECTS) $(core2_LDADD) $(LIBS)
core3$(EXEEXT): $(core3_OBJECTS) $(core3_DEPENDENCIES) $(EXTRA_core3_DEPENDENCIES) 
	@rm -f core3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core3_OBJECTS) $(core3_LDADD) $(LIBS)
core4$(EXEEXT): $(core4_OBJECTS) $(core4_DEPENDENCIES) $(EXTRA_core4_DEPENDENCIES) 
	@rm -f core4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core4_OBJECTS) $(core4_LDADD) $(LIBS)
core5$(EXEEXT): $(core5_OBJECTS) $(core5_DEPENDENCIES) $(EXTRA_core5_DEPENDENCIES) 
	@rm -f core5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core5_OBJECTS) $(core5_LDADD) $(LIBS)
core6$(EXEEXT): $(core6_OBJECTS) $(core6_DEPENDENCIES) $(EXTRA_core6_DEPENDENCIES) 
	@rm -f core6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(core6_OBJECTS) $(core6_LDADD) $(LIBS)
generichash$(EXEEXT): $(generichash_OBJECTS) $(generichash_DEPENDENCIES) $(EXTRA_generichash_DEPENDENCIES) 
	@rm -f generichash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash_OBJECTS) $(generichash_LDADD) $(LIBS)
generichash2$(EXEEXT): $(generichash2_OBJECTS) $(generichash2_DEPENDENCIES) $(EXTRA_generichash2_DEPENDENCIES) 
	@rm -f generichash2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(generichash2_OBJECTS) $(generichash2_LDADD) $(LIBS)
hash$(EXEEXT): $(hash_OBJECTS) $(hash_DEPENDENCIES) $(EXTRA_hash_DEPENDENCIES) 
	@rm -f hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash_OBJECTS) $(hash_LDADD) $(LIBS)
hash3$(EXEEXT): $(hash3_OBJECTS) $(hash3_DEPENDENCIES) $(EXTRA_hash3_DEPENDENCIES) 
	@rm -f hash3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hash3_OBJECTS) $(hash3_LDADD) $(LIBS)
onetimeauth$(EXEEXT): $(onetimeauth_OBJECTS) $(onetimeauth_DEPENDENCIES) $(EXTRA_onetimeauth_DEPENDENCIES) 
	@rm -f onetimeauth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth_OBJECTS) $(onetimeauth_LDADD) $(LIBS)
onetimeauth2$(EXEEXT): $(onetimeauth2_OBJECTS) $(onetimeauth2_DEPENDENCIES) $(EXTRA_onetimeauth2_DEPENDENCIES) 
	@rm -f onetimeauth2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth2_OBJECTS) $(onetimeauth2_LDADD) $(LIBS)
onetimeauth7$(EXEEXT): $(onetimeauth7_OBJECTS) $(onetimeauth7_DEPENDENCIES) $(EXTRA_onetimeauth7_DEPENDENCIES) 
	@rm -f onetimeauth7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(onetimeauth7_OBJECTS) $(onetimeauth7_LDADD) $(LIBS)
randombytes$(EXEEXT): $(randombytes_OBJECTS) $(randombytes_DEPENDENCIES) $(EXTRA_randombytes_DEPENDENCIES) 
	@rm -f randombytes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(randombytes_OBJECTS) $(randombytes_LDADD) $(LIBS)
scalarmult$(EXEEXT): $(scalarmult_OBJECTS) $(scalarmult_DEPENDENCIES) $(EXTRA_scalarmult_DEPENDENCIES) 
	@rm -f scalarmult$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult_OBJECTS) $(scalarmult_LDADD) $(LIBS)
scalarmult2$(EXEEXT): $(scalarmult2_OBJECTS) $(scalarmult2_DEPENDENCIES) $(EXTRA_scalarmult2_DEPENDENCIES) 
	@rm -f scalarmult2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult2_OBJECTS) $(scalarmult2_LDADD) $(LIBS)
scalarmult5$(EXEEXT): $(scalarmult5_OBJECTS) $(scalarmult5_DEPENDENCIES) $(EXTRA_scalarmult5_DEPENDENCIES) 
	@rm -f scalarmult5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult5_OBJECTS) $(scalarmult5_LDADD) $(LIBS)
scalarmult6$(EXEEXT): $(scalarmult6_OBJECTS) $(scalarmult6_DEPENDENCIES) $(EXTRA_scalarmult6_DEPENDENCIES) 
	@rm -f scalarmult6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalarmult6_OBJECTS) $(scalarmult6_LDADD) $(LIBS)
secretbox$(EXEEXT): $(secretbox_OBJECTS) $(secretbox_DEPENDENCIES) $(EXTRA_secretbox_DEPENDENCIES) 
	@rm -f secretbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox_OBJECTS) $(secretbox_LDADD) $(LIBS)
secretbox2$(EXEEXT): $(secretbox2_OBJECTS) $(secretbox2_DEPENDENCIES) $(EXTRA_secretbox2_DEPENDENCIES) 
	@rm -f secretbox2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox2_OBJECTS) $(secretbox2_LDADD) $(LIBS)
secretbox7$(EXEEXT): $(secretbox7_OBJECTS) $(secretbox7_DEPENDENCIES) $(EXTRA_secretbox7_DEPENDENCIES) 
	@rm -f secretbox7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox7_OBJECTS) $(secretbox7_LDADD) $(LIBS)
secretbox8$(EXEEXT): $(secretbox8_OBJECTS) $(secretbox8_DEPENDENCIES) $(EXTRA_secretbox8_DEPENDENCIES) 
	@rm -f secretbox8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretbox8_OBJECTS) $(secretbox8_LDADD) $(LIBS)
shorthash$(EXEEXT): $(shorthash_OBJECTS) $(shorthash_DEPENDENCIES) $(EXTRA_shorthash_DEPENDENCIES) 
	@rm -f shorthash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shorthash_OBJECTS) $(shorthash_LDADD) $(LIBS)
sodium_core$(EXEEXT): $(sodium_core_OBJECTS) $(sodium_core_DEPENDENCIES) $(EXTRA_sodium_core_DEPENDENCIES) 
	@rm -f sodium_core$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_core_OBJECTS) $(sodium_core_LDADD) $(LIBS)
sodium_utils$(EXEEXT): $(sodium_utils_OBJECTS) $(sodium_utils_DEPENDENCIES) $(EXTRA_sodium_utils_DEPENDENCIES) 
	@rm -f sodium_utils$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_utils_OBJECTS) $(sodium_utils_LDADD) $(LIBS)
sodium_version$(EXEEXT): $(sodium_version_OBJECTS) $(sodium_version_DEPENDENCIES) $(EXTRA_sodium_version_DEPENDENCIES) 
	@rm -f sodium_version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sodium_version_OBJECTS) $(sodium_version_LDADD) $(LIBS)
stream$(EXEEXT): $(stream_OBJECTS) $(stream_DEPENDENCIES) $(EXTRA_stream_DEPENDENCIES) 
	@rm -f stream$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream_OBJECTS) $(stream_LDADD) $(LIBS)
stream2$(EXEEXT): $(stream2_OBJECTS) $(stream2_DEPENDENCIES) $(EXTRA_stream2_DEPENDENCIES) 
	@rm -f stream2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream2_OBJECTS) $(stream2_LDADD) $(LIBS)
stream3$(EXEEXT): $(stream3_OBJECTS) $(stream3_DEPENDENCIES) $(EXTRA_stream3_DEPENDENCIES) 
	@rm -f stream3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream3_OBJECTS) $(stream3_LDADD) $(LIBS)
stream4$(EXEEXT): $(stream4_OBJECTS) $(stream4_DEPENDENCIES) $(EXTRA_stream4_DEPENDENCIES) 
	@rm -f stream4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream4_OBJECTS) $(stream4_LDADD) $(LIBS)
stream5$(EXEEXT): $(stream5_OBJECTS) $(stream5_DEPENDENCIES) $(EXTRA_stream5_DEPENDENCIES) 
	@rm -f stream5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream5_OBJECTS) $(stream5_LDADD) $(LIBS)
stream6$(EXEEXT): $(stream6_OBJECTS) $(stream6_DEPENDENCIES) $(EXTRA_stream6_DEPENDENCIES) 
	@rm -f stream6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(stream6_OBJECTS) $(stream6_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/auth.Po
#include ./$(DEPDIR)/auth2.Po
#include ./$(DEPDIR)/auth3.Po
#include ./$(DEPDIR)/auth5.Po
#include ./$(DEPDIR)/box.Po
#include ./$(DEPDIR)/box2.Po
#include ./$(DEPDIR)/box7.Po
#include ./$(DEPDIR)/box8.Po
#include ./$(DEPDIR)/core1.Po
#include ./$(DEPDIR)/core2.Po
#include ./$(DEPDIR)/core3.Po
#include ./$(DEPDIR)/core4.Po
#include ./$(DEPDIR)/core5.Po
#include ./$(DEPDIR)/core6.Po
#include ./$(DEPDIR)/generichash.Po
#include ./$(DEPDIR)/generichash2.Po
#include ./$(DEPDIR)/hash.Po
#include ./$(DEPDIR)/hash3.Po
#include ./$(DEPDIR)/onetimeauth.Po
#include ./$(DEPDIR)/onetimeauth2.Po
#include ./$(DEPDIR)/onetimeauth7.Po
#include ./$(DEPDIR)/randombytes.Po
#include ./$(DEPDIR)/scalarmult.Po
#include ./$(DEPDIR)/scalarmult2.Po
#include ./$(DEPDIR)/scalarmult5.Po
#include ./$(DEPDIR)/scalarmult6.Po
#include ./$(DEPDIR)/secretbox.Po
#include ./$(DEPDIR)/secretbox2.Po
#include ./$(DEPDIR)/secretbox7.Po
#include ./$(DEPDIR)/secretbox8.Po
#include ./$(DEPDIR)/shorthash.Po
#include ./$(DEPDIR)/sodium_core.Po
#include ./$(DEPDIR)/sodium_utils.Po
#include ./$(DEPDIR)/sodium_version.Po
#include ./$(DEPDIR)/stream.Po
#include ./$(DEPDIR)/stream2.Po
#include ./$(DEPDIR)/stream3.Po
#include ./$(DEPDIR)/stream4.Po
#include ./$(DEPDIR)/stream5.Po
#include ./$(DEPDIR)/stream6.Po

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


verify: check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
